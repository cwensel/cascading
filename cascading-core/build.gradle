/*
 * Copyright (c) 2007-2015 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.cascading.org/
 *
 * This file is part of the Cascading project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

dependencies {
  compile group: 'org.jgrapht', name: 'jgrapht-core', version: '0.9.1'
  compile group: 'riffle', name: 'riffle', version: '1.0.0'

  // this prevents a transitive dependency until it is required downstream
  provided group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'
  testCompile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'
  testRuntime group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.5'
  testRuntime group: 'log4j', name: 'log4j', version: '1.2.16'
}

jar.doFirst {
  if( !System.properties[ 'cascading.release.final' ] )
    new File( buildDir, 'build.number.properties' ).write( "cascading.build.number=${buildNumber}" )
}

jar {
  into( 'cascading' ) {
    from '../version.properties'

    if( !System.properties[ 'cascading.release.final' ] )
      from "${buildDir}/build.number.properties"
  }
}

platformTest.enabled = false

javadoc {

  source 'src/test/java/cascading/CascadingTestCase.java'
  source 'src/test/java/cascading/tuple/TupleListCollector.java'

  classpath = files( project.sourceSets.test.compileClasspath )

  configure( options ) {
    links << 'http://hadoop.apache.org/docs/r1.1.2/api/'

    links << "http://${rootProject.s3UploadDocs.destination}javadoc/cascading-hadoop".toString()
    links << "http://${rootProject.s3UploadDocs.destination}javadoc/cascading-local".toString()

//    linksOffline( '../../../cascading-hadoop', "http://${rootProject.s3UploadDocs.destination}javadoc/cascading-hadoop".toString() )
//    linksOffline( '../../../cascading-local', "http://${rootProject.s3UploadDocs.destination}javadoc/cascading-local".toString() )
  }
}
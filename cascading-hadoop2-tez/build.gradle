/*
 * Copyright (c) 2007-2016 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.cascading.org/
 *
 * This file is part of the Cascading project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: "${rootDir}/etc/hadoop-shared-config.gradle"

idea {
  pathVariables MODULE_DIR: file( "${rootDir}/cascading-hadoop" )
}

ext.hadoop2Version = '2.7.2'
ext.tezVersion = '0.8.2'

if( System.properties[ 'hadoop2tez.release.final' ] )
  tezVersion = System.properties[ 'hadoop2tez.release.final' ]

repositories {

  if( tezVersion.contains( 'SNAPSHOT' ) )
    maven {url = 'https://repository.apache.org/content/repositories/snapshots'}
}

dependencies {

  compile project( ':cascading-core' )
  compile project( ':cascading-hadoop2-io' )
  compile project( ':cascading-hadoop2-tez-stats' )

  // forces update of yarn slf4j dependencies
  provided group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'
  provided group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.5'

  provided( group: 'org.apache.tez', name: 'tez-api', version: tezVersion )
  provided( group: 'org.apache.tez', name: 'tez-dag', version: tezVersion )
  provided( group: 'org.apache.tez', name: 'tez-mapreduce', version: tezVersion )

  provided( group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-core', version: hadoop2Version )
  provided( group: 'org.apache.hadoop', name: 'hadoop-common', version: hadoop2Version )
  provided( group: 'org.apache.hadoop', name: 'hadoop-hdfs', version: hadoop2Version )

  testCompile project( path: ':cascading-core', configuration: 'testArtifacts' )
  testCompile project( path: ':cascading-platform', configuration: 'testArtifacts' )

  testCompile( group: 'org.apache.tez', name: 'tez-tests', version: tezVersion, classifier: 'tests' )
  testCompile( group: 'org.apache.tez', name: 'tez-api', version: tezVersion )
  testCompile( group: 'org.apache.tez', name: 'tez-dag', version: tezVersion )
  testCompile( group: 'org.apache.hadoop', name: 'hadoop-minicluster', version: hadoop2Version )

  if( hadoop2Version.startsWith( '2.4' ) ) // hadoop 2.4
  {
    testCompile( group: 'org.apache.tez', name: 'tez-yarn-timeline-history', version: tezVersion )
  }
  else // hadoop 2.5 +
  {
    provided( group: 'org.apache.hadoop', name: 'hadoop-aws', version: hadoop2Version )
    testCompile( group: 'org.apache.tez', name: 'tez-yarn-timeline-history-with-acls', version: tezVersion )
  }
}

configurations.all {
  resolutionStrategy {

    def versions = ['0.6.0', '0.6.1', '0.6.2', '0.7.0', '0.8.2']

    if( !hadoop2Version.startsWith( '2.4' ) && versions.contains( tezVersion ) )
      force 'com.google.guava:guava:11.0.2'

    eachDependency {def details ->
      if( details.requested.group == 'org.apache.hadoop' )
        details.useVersion hadoop2Version
    }
  }
}

test {

  systemProperties[ 'test.platform.includes' ] = 'hadoop2-tez'

  delete( "target" ) // hardcoded path in hadoop2

  forkEvery = 1 // static fields on the platform test get munged otherwise

  systemProperties[ 'hadoop.log.dir' ] = new String( "${buildDir}/test/log" )
  systemProperties[ 'hadoop.tmp.dir' ] = new String( "${buildDir}/test/tmp" )
  systemProperties[ 'test.build.data' ] = new String( "${buildDir}/test/data" )
}

platformTest {

  systemProperties[ 'test.platform.includes' ] = 'hadoop2-tez'

  delete( "target" ) // hardcoded path in hadoop2

  forkEvery = 1 // static fields on the platform test get munged otherwise

  systemProperties[ 'hadoop.log.dir' ] = new String( "${buildDir}/test/log" )
  systemProperties[ 'hadoop.tmp.dir' ] = new String( "${buildDir}/test/tmp" )
  systemProperties[ 'test.build.data' ] = new String( "${buildDir}/test/data" )
}

javadoc {

//  source 'src/test/java/cascading/platform/hadoop2/Hadoop2MR1Platform.java'
//  source 'src/test/shared/cascading/platform/hadoop/BaseHadoopPlatform.java'

  classpath = files( project.sourceSets.test.compileClasspath )

  configure( options ) {
    links << 'http://hadoop.apache.org/docs/r2.4.0/api/'
    links << "http://${rootProject.s3UploadDocs.destination}javadoc/cascading-core".toString()

//    linksOffline( '../../../../../../../cascading-core', "http://${rootProject.s3UploadDocs.destination}javadoc/cascading-core".toString() )
  }
}

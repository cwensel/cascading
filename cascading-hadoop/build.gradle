/*
 * Copyright (c) 2007-2015 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.cascading.org/
 *
 * This file is part of the Cascading project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: "${rootDir}/etc/hadoop-shared-config.gradle"
apply from: "${rootDir}/etc/hadoop-shared-io-config.gradle"
apply from: "${rootDir}/etc/hadoop-shared-mr1-config.gradle"

//ext.hadoopVersion = '0.20.2' // no longer supported
//ext.hadoopVersion = '0.20.205.0' // missing maven deps
//ext.hadoopVersion = '1.0.4'  // missing maven deps
//ext.hadoopVersion = '1.1.2'
ext.hadoopVersion = '1.2.1'

if( System.properties[ 'hadoop.release.final' ] )
  hadoopVersion = System.properties[ 'hadoop.release.final' ]

dependencies {

  compile project( ':cascading-core' )

  provided group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'

  provided( group: 'org.apache.hadoop', name: 'hadoop-core', version: hadoopVersion ) {
    exclude group: 'ant'
    exclude group: 'junit'
    exclude group: 'oro' // causes transient build maven failures, ftw
  }

  testCompile project( path: ':cascading-core', configuration: 'testArtifacts' )
  testCompile project( path: ':cascading-platform', configuration: 'testArtifacts' )

  testCompile( group: 'org.apache.hadoop', name: 'hadoop-test', version: hadoopVersion ) {
    exclude group: 'oro' // causes transient build maven failures, ftw
  }
}

if( hadoopVersion.startsWith( "1.0." ) )
{
  dependencies {
    testCompile group: 'commons-io', name: 'commons-io', version: '2.1'

    testRuntime 'javax.ws.rs:jsr311-api:1.1.1' // missed dep in hadoop, go figure
  }
}

if( hadoopVersion.startsWith( "0.20.205." ) )
{
  dependencies {
    testRuntime 'javax.ws.rs:jsr311-api:1.1.1' // missed dep in hadoop, go figure
    testRuntime 'org.codehaus.jackson:jackson-core-asl:1.0.1'
    testRuntime 'org.codehaus.jackson:jackson-mapper-asl:1.0.1'
  }
}

if( hadoopVersion.startsWith( "0.20." ) )
{
  dependencies {
    testRuntime group: 'commons-io', name: 'commons-io', version: '2.0.1'
  }
}

test {
  forkEvery = 1 // static fields on the platform test get munged otherwise

  systemProperties[ 'hadoop.log.dir' ] = new String( "${buildDir}/test/log" )
  systemProperties[ 'hadoop.tmp.dir' ] = new String( "${buildDir}/test/tmp" )
  systemProperties[ 'test.build.data' ] = new String( "${buildDir}/test/data" )
}

platformTest {
  forkEvery = 1 // static fields on the platform test get munged otherwise

  systemProperties[ 'hadoop.log.dir' ] = new String( "${buildDir}/test/log" )
  systemProperties[ 'hadoop.tmp.dir' ] = new String( "${buildDir}/test/tmp" )
  systemProperties[ 'test.build.data' ] = new String( "${buildDir}/test/data" )
}

javadoc {

  source 'src/test/java/cascading/platform/hadoop/HadoopPlatform.java'
  source 'src/test/shared/cascading/platform/hadoop/BaseHadoopPlatform.java'

  classpath = files( project.sourceSets.test.compileClasspath )

  configure( options ) {
    links << 'http://hadoop.apache.org/docs/r1.1.2/api/'
    links << "http://${rootProject.s3UploadDocs.destination}javadoc/cascading-core".toString()

//    linksOffline( '../../../cascading-core', "http://${rootProject.s3UploadDocs.destination}javadoc/cascading-core".toString() )
  }
}